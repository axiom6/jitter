// Generated by CoffeeScript 1.6.3
var UI,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

UI = (function() {
  UI.$empty = $();

  UI.None = "None";

  UI.ncol = 36;

  UI.nrow = 36;

  UI.margin = {
    width: 1,
    height: 1,
    west: 5,
    north: 5,
    east: 2,
    south: 2,
    wStudy: 0.5,
    hStudy: 0.5
  };

  UI.MaxTocLevel = 12;

  UI.SelectPlane = 'SelectPlane';

  UI.SelectAllPanes = 'SelectAllPanes';

  UI.SelectOverview = 'SelectOverview';

  UI.SelectPractice = 'SelectPractice';

  UI.SelectStudy = 'SelectStudy';

  function UI(stream) {
    var callback,
      _this = this;
    this.stream = stream;
    this.resize = __bind(this.resize, this);
    callback = function(data) {
      _this.spec = data;
      _this.tocs = new UI.Tocs(_this, _this.stream, _this.spec);
      _this.view = new UI.View(_this, _this.stream, _this.spec);
      return _this.ready();
    };
    UI.readJSON("json/toc.json", callback);
    UI.ui = this;
  }

  UI.prototype.ready = function() {
    $('#' + Util.htmlId('App')).html(this.html());
    this.tocs.ready();
    this.view.ready();
  };

  UI.prototype.html = function() {
    return "<div   class=\"ikw-logo\" id=\"" + (this.htmlId('Logo')) + "\"></div>\n<div   class=\"ikw-corp\" id=\"" + (this.htmlId('Corp')) + "\">\n  <div id=\"" + (this.htmlId('Navb')) + "\"></div>\n</div>\n<div   class=\"ikw-find\" id=\"" + (this.htmlId('Find')) + "\"></div>\n<div   class=\"ikw-tocs tocs\" id=\"" + (this.htmlId('Tocs')) + "\"></div>\n<div   class=\"ikw-view\" id=\"" + (this.htmlId('View')) + "\">\n  <i id=\"" + (this.htmlId('Togg')) + "\" class=\"fa fa-compress ikw-togg\"></i>\n</div>\n<div class=\"ikw-side\" id=\"" + (this.htmlId('Side')) + "\"></div>\n<div class=\"ikw-pref\" id=\"" + (this.htmlId('Pref')) + "\"><a id=\"" + (this.htmlId('ImageLink')) + "\"></a></div>\n<div class=\"ikw-foot\" id=\"" + (this.htmlId('Foot')) + "\"></div>\n<div class=\"ikw-trak\" id=\"" + (this.htmlId('Trak')) + "\"></div>";
  };

  UI.prototype.show = function() {
    this.tocs.show();
    this.view.showAll();
  };

  UI.prototype.hide = function() {
    this.tocs.hide();
    this.view.hideAll();
  };

  UI.prototype.resize = function() {
    this.view.resize();
  };

  UI.prototype.htmlId = function(name, type, ext) {
    if (type == null) {
      type = '';
    }
    if (ext == null) {
      ext = '';
    }
    return Util.htmlId(name, type, ext);
  };

  UI.prototype.notInPlane = function() {
    return false;
  };

  UI.prototype.getHtmlId = function(name, ext) {
    if (ext == null) {
      ext = '';
    }
    return Util.getHtmlId(name, "", ext);
  };

  UI.readJSON = function(url, callback) {
    var settings, urlLocal,
      _this = this;
    urlLocal = "http://localhost:63342/jitter/" + url;
    settings = {
      url: urlLocal,
      type: 'GET',
      dataType: 'json',
      processData: false,
      contentType: 'application/json',
      accepts: 'application/json'
    };
    settings.success = function(data, status, jqXHR) {
      Util.noop(status, jqXHR);
      return callback(data);
    };
    settings.error = function(jqXHR, status, error) {
      Util.noop(jqXHR);
      return Util.error("UI.readJSON()", {
        url: urlLocal,
        status: status,
        error: error
      });
    };
    $.ajax(settings);
  };

  UI.isChild = function(key) {
    var a;
    a = key.charAt(0);
    return a === a.toUpperCase();
  };

  UI.select = function(name, source, intent) {
    if (intent == null) {
      intent = "SelectAll";
    }
    return {
      name: name,
      source: source,
      intent: intent
    };
  };

  UI.isEmpty = function($elem) {
    return ($elem != null) && ($elem.length != null) && $elem.length === 0;
  };

  UI.isElem = function($elem) {
    return !UI.isEmpty($elem);
  };

  UI.jmin = function(cells) {
    if (cells == null) {
      Util.trace('UI.jmin');
    }
    return [cells[0] - 1, cells[1], cells[2] - 1, cells[3]];
  };

  UI.toCells = function(jmin) {
    return [jmin[0] + 1, jmin[1], jmin[2] + 1, jmin[3]];
  };

  UI.unionCells = function(cells1, cells2) {
    var i1, i2, j1, j2, m1, m2, n1, n2, _ref, _ref1;
    _ref = UI.jmin(cells1), j1 = _ref[0], m1 = _ref[1], i1 = _ref[2], n1 = _ref[3];
    _ref1 = UI.jmin(cells2), j2 = _ref1[0], m2 = _ref1[1], i2 = _ref1[2], n2 = _ref1[3];
    return [Math.min(j1, j2) + 1, Math.max(j1 + m1, j2 + m2) - Math.min(j1, j2), Math.min(i1, i2) + 1, Math.max(i1 + n1, i2 + n2) - Math.min(i1, i2)];
  };

  UI.intersectCells = function(cells1, cells2) {
    var i1, i2, j1, j2, m1, m2, n1, n2, _ref, _ref1;
    _ref = UI.jmin(cells1), j1 = _ref[0], m1 = _ref[1], i1 = _ref[2], n1 = _ref[3];
    _ref1 = UI.jmin(cells2), j2 = _ref1[0], m2 = _ref1[1], i2 = _ref1[2], n2 = _ref1[3];
    return [Math.max(j1, j2) + 1, Math.min(j1 + m1, j2 + m2), Math.max(i1, i2) + 1, Math.min(i1 + n1, i2 + n2)];
  };

  UI.subscribe = function() {};

  UI.publish = function() {};

  return UI;

})();
